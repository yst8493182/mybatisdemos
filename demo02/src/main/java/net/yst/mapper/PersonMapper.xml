<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.yst.dao.PersonMapper">
    <cache />


    <resultMap id="BaseResultMap" type="net.yst.models.Person">
        <id column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="birthday" jdbcType="DATE" property="birthday"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    pid, name, age, birthday
  </sql>
    <select id="selectByExample" parameterType="net.yst.models.PersonExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from person
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from person
        where pid = #{pid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="net.yst.models.PersonExample">
        delete from person
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.yst.models.Person">
    insert into person (pid, name, age, 
      birthday)
    values (#{pid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{birthday,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" parameterType="net.yst.models.Person">
        insert into person
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                pid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.yst.models.PersonExample" resultType="java.lang.Integer">
        select count(*) from person
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update person
        <set>
            <if test="record.pid != null">
                pid = #{record.pid,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.birthday != null">
                birthday = #{record.birthday,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update person
        set pid = #{record.pid,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER},
        birthday = #{record.birthday,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="net.yst.models.Person">
        update person
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
        </set>
        where pid = #{pid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.yst.models.Person">
    update person
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE}
    where pid = #{pid,jdbcType=INTEGER}
  </update>


    <resultMap id="PersonOrderMapper" type="net.yst.models.Person" extends="BaseResultMap">
        <collection property="ordersList" ofType="net.yst.models.Orders">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="pid" jdbcType="INTEGER" property="pid"/>
            <result column="total" jdbcType="REAL" property="total"/>


        </collection>
    </resultMap>


    <resultMap id="PersonOrderProductMapper" type="net.yst.models.Person" extends="BaseResultMap">
        <collection property="ordersList" ofType="net.yst.models.Orders" javaType="list">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="pid" jdbcType="INTEGER" property="pid"/>
            <result column="total" jdbcType="REAL" property="total"/>

            <collection property="products" ofType="net.yst.models.Product" javaType="list" column="oid">
                <id column="productid" jdbcType="INTEGER" property="productid"/>
                <result column="name" jdbcType="VARCHAR" property="name"/>
                <result column="price" jdbcType="INTEGER" property="price"/>
                <result column="oid" jdbcType="INTEGER" property="oid"/>

            </collection>


        </collection>
    </resultMap>


    <select id="selectPersonById" parameterType="integer" resultMap="PersonOrderMapper">
        SELECT * FROM Person p  where  p.pid=#{pid}
  </select>


    <select id="selectPersonOrderProductById" parameterType="integer" resultMap="PersonOrderProductMapper">
SELECT * FROM person p,orders o,product pr WHERE o.id=pr.oid AND p.pid=o.pid AND p.pid=#{pid};
    </select>


    <resultMap id="PersonRoleMapper" type="net.yst.models.Person" extends="BaseResultMap">

        <collection property="roleList" ofType="net.yst.models.Role">
            <id column="roleid" jdbcType="INTEGER" property="roleid"/>
            <result column="rolename" jdbcType="VARCHAR" property="rolename"/>
            <result column="roledesc" jdbcType="VARCHAR" property="roledesc"/>
        </collection>
    </resultMap>


    <select id="selectPersonRole" parameterType="integer" resultMap="PersonRoleMapper">

        select * from mybatis.person p,mybatis.personrole pr,mybatis.role r
        WHERE  p.pid=pr.personid AND r.roleid=pr.roleid AND p.pid=#{pid};

    </select>



    <resultMap id="PersonIdNoMap" type="net.yst.models.Person" extends="BaseResultMap">

        <association property="idNo" javaType="net.yst.models.IdNo">
            <id column="pid" jdbcType="INTEGER" property="pid" />
            <result column="cardno" jdbcType="CHAR" property="cardno" />

        </association>

    </resultMap>


    
    <select id="selectPersonIdNo" parameterType="integer" resultMap="PersonIdNoMap">

        SELECT * FROM person p ,idno i where p.pid=i.pid and p.pid=#{pid}

    </select>


    <!--延迟加载-->
    <resultMap id="person" type="net.yst.models.Person" extends="BaseResultMap">
        <collection property="ordersList" column="pid" select="net.yst.dao.OrdersMapper.selectOrdersByPid">

        </collection>

    </resultMap>


    <select id="selectPersonByIdLazy" parameterType="integer" resultMap="person">

        select * from person where pid=#{pid};

    </select>


</mapper>