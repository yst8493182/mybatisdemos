<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.yst.dao.OrdersMapper">

    <cache />


    <resultMap id="BaseResultMap" type="net.yst.models.Orders">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="total" jdbcType="REAL" property="total"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, pid, total
  </sql>
    <select id="selectByExample" parameterType="net.yst.models.OrdersExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="net.yst.models.OrdersExample">
        delete from orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.yst.models.Orders">
    insert into orders (id, pid, total)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{total,jdbcType=REAL})
  </insert>
    <insert id="insertSelective" parameterType="net.yst.models.Orders">
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="total != null">
                total,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="total != null">
                #{total,jdbcType=REAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.yst.models.OrdersExample" resultType="java.lang.Integer">
        select count(*) from orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update orders
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.pid != null">
                pid = #{record.pid,jdbcType=INTEGER},
            </if>
            <if test="record.total != null">
                total = #{record.total,jdbcType=REAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update orders
        set id = #{record.id,jdbcType=INTEGER},
        pid = #{record.pid,jdbcType=INTEGER},
        total = #{record.total,jdbcType=REAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="net.yst.models.Orders">
        update orders
        <set>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="total != null">
                total = #{total,jdbcType=REAL},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.yst.models.Orders">
    update orders
    set pid = #{pid,jdbcType=INTEGER},
      total = #{total,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <resultMap id="OrderPerson" type="net.yst.models.Orders" extends="BaseResultMap">

        <!--多对一时，使用association-->
        <association property="person" javaType="net.yst.models.Person">
            <id column="pid" jdbcType="INTEGER" property="pid"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="age" jdbcType="INTEGER" property="age"/>
            <result column="birthday" jdbcType="DATE" property="birthday"/>
        </association>
    </resultMap>


    <resultMap id="OrderPersonProduct" type="net.yst.models.Orders" extends="BaseResultMap">

        <!--同时存在association、collection时，association需要写在collection的之前-->

        <!--多对一时，使用association，property是指“一”的一方， javaType 时“一”的类型-->
        <association property="person" javaType="net.yst.models.Person">
            <id column="pid" jdbcType="INTEGER" property="pid"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="age" jdbcType="INTEGER" property="age"/>
            <result column="birthday" jdbcType="DATE" property="birthday"/>
        </association>

        <!--一对多时，使用collection，property是指“多”的一方， javaType 时“多”的类型-->
        <collection property="products" ofType="net.yst.models.Product">
            <id column="productid" jdbcType="INTEGER" property="productid"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="price" jdbcType="INTEGER" property="price"/>
            <result column="oid" jdbcType="INTEGER" property="oid"/>
        </collection>

    </resultMap>


    <select id="selectOrderPerson" resultMap="OrderPerson" parameterType="int">

        SELECT *
        FROM Orders o,person p
        where o.pid= p.pid AND  o.id=#{id}

    </select>


    <select id="selectOrderPersonProduct" resultMap="OrderPersonProduct" parameterType="int">

        SELECT *
        FROM Orders o,person p,product pr where o.pid= p.pid AND pr.oid=o.id AND o.id=#{id}

    </select>



    <select id="selectOrdersByPid" parameterType="integer" resultMap="BaseResultMap">
        select * from orders WHERE pid=#{pid}

    </select>

</mapper>